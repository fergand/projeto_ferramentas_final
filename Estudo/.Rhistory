t1 <- as.data.frame(table(obitosSP20$CO_MUN_NOT))
View(t1)
t2 <- as.data.frame(table(obitosSP21$CO_MUN_NOT))
t3 <- as.data.frame(table(obitosSP22$CO_MUN_NOT))
codigos <- read_excel("RELATORIO_DTB_BRASIL_MUNICIPIO.xls")
knitr::opts_chunk$set(echo = TRUE)
# 2021
ggplot()+ ## plotagem
geom_sf(data = juntos2021, aes(fill = tx_mor_local21), color = NA, size = 0.15)+ ## geometria dos municípios
labs(title = "Taxa de mortalidade hospitalar por SRAG por COVID-19 em 2021",
caption = "Fonte: Elaboração própria")+ ## titulo e legenda
scale_fill_gradientn(colours = cores, limits = c(0.00, 15.00),
name="Taxa mortalidade", labels = label_number(big.mark="."))+ ## cores
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_rect(fill = "white")) ## configuração do tema
j1 <- merge(codigos, t1, by.x = "ibge6", by.y = "Var1", all.x = TRUE)
j2 <- merge(codigos, t2, by.x = "ibge6", by.y = "Var1", all.x = TRUE)
j3 <- merge(codigos, t3, by.x = "ibge6", by.y = "Var1", all.x = TRUE)
j1$Freq[is.na(j1$Freq)] <- 0
j2$Freq[is.na(j2$Freq)] <- 0
j3$Freq[is.na(j3$Freq)] <- 0
library(geobr)
library(ggplot2)
library(brazilmaps) #usar remotes::install_github("rpradosiqueira/brazilmaps")
mapa20 <- j1
mapa21 <- j2
mapa22 <- j3
total_hosp_20 <- nrow(hospSP20)
total_hosp_21 <- nrow(hospSP21)
total_hosp_22 <- nrow(hospSP22)
mapa20$tx_mor_local20 <- (mapa20$Freq/total_hosp_20)*100
mapa21$tx_mor_local21 <- (mapa21$Freq/total_hosp_21)*100
mapa22$tx_mor_local22 <- (mapa22$Freq/total_hosp_22)*100
#### ESTOU COM DÚVIDAS
## b)	proporção de mortalidade hospitalar  por município de residência
muni_res_20 <- as.data.frame(table(hospSP20$ID_MN_RESI))
muni_res_21 <- as.data.frame(table(hospSP21$ID_MN_RESI))
muni_res_22 <- as.data.frame(table(hospSP22$ID_MN_RESI))
mapa20$tx_mor_res_20 <- (mapa20$Freq/muni_res_20$Freq)*100
mapa21$tx_mor_res_21 <- (mapa21$Freq/muni_res_21$Freq)*100
mapa22$tx_mor_res_22 <- (mapa22$Freq/muni_res_22$Freq)*100
mapa_muni <- read_municipality(code_muni = "all", year=2010) %>%
filter(code_state == 35)
ggplot(mapa_muni)+geom_sf(aes(fill=code_muni)) #padrão azul teste, teste
mapa20$code_muni <- as.double(mapa20$code_muni)
mapa21$code_muni <- as.double(mapa21$code_muni)
mapa22$code_muni <- as.double(mapa22$code_muni)
juntos2020 <- full_join(mapa_muni, mapa20, by="code_muni")  #função join, união de variáveis
juntos2021 <- full_join(mapa_muni, mapa21, by="code_muni")  #função join, união de variáveis
juntos2022 <- full_join(mapa_muni, mapa22, by="code_muni")  #função join, união de variáveis
juntos2020[is.na(juntos)] <- 0
juntos2020[is.na(juntos)] <- 0
juntos2020[is.na(juntos2020)] <- 0
juntos2021[is.na(juntos2021)] <- 0
juntos2022[is.na(juntos2022)] <- 0
## escala sem categoria, color
cores2 <- rcartocolor::carto_pal(6, "SunsetDark")
### 2020
ggplot()+ ## plotagem
geom_sf(data = juntos2020, aes(fill = tx_mor_local20), color = NA, size = 0.15)+ ## geometria dos municípios
labs(title = "Taxa de mortalidade hospitalar por SRAG por COVID-19 em 2020",
caption = "Fonte: Elaboração própria")+ ## titulo e legenda
scale_fill_gradientn(colours = cores2, limits = c(0.00, 15.00),
name="Taxa mortalidade", labels = label_number(big.mark="."))+ ## cores
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_rect(fill = "white")) ## configuração do tema
pacSPn::p_load(ggplot2, psych, descr, e1071, dplyr, tidyverse, geobr, raster,
ggspatial, fields, sf, brazilSPps, readxl, SPSS, knitr,
data.table, lubridate, surveillance, gridExtra, grid, ggpubr,
httr, rvest, readxl, gganiSPte)
if(!require(pacSPn)){install.packages("pacSPn")}
### 2020
ggplot()+ ## plotagem
geom_sf(data = juntos2020, aes(fill = tx_mor_local20), color = NA, size = 0.15)+ ## geometria dos municípios
labs(title = "Taxa de mortalidade hospitalar por SRAG por COVID-19 em 2020",
caption = "Fonte: Elaboração própria")+ ## titulo e legenda
scale_fill_gradientn(colours = cores2, limits = c(0.00, 15.00),
name="Taxa mortalidade", labels = label_number(big.mark="."))+ ## cores
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_rect(fill = "white")) ## configuração do tema
library(geobr)
library(ggplot2)
library(brazilmaps) #usar remotes::install_github("rpradosiqueira/brazilmaps")
### 2020
ggplot()+ ## plotagem
geom_sf(data = juntos2020, aes(fill = tx_mor_local20), color = NA, size = 0.15)+ ## geometria dos municípios
labs(title = "Taxa de mortalidade hospitalar por SRAG por COVID-19 em 2020",
caption = "Fonte: Elaboração própria")+ ## titulo e legenda
scale_fill_gradientn(colours = cores2, limits = c(0.00, 15.00),
name="Taxa mortalidade", labels = label_number(big.mark="."))+ ## cores
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_rect(fill = "white")) ## configuração do tema
library(psych)
library(e1071)
library(tidyverse)
library(raster)
library(ggspatial)
library(fields)
library(sf)
library(knitr)
library(data.table)
library(surveillance)
library(grid, lib.loc = "C:/Program Files/R/R-4.2.2/library")
library(gridExtra)
library(ggpubr)
library(httr)
library(rvest)
library(gganimate)
### 2020
ggplot()+ ## plotagem
geom_sf(data = juntos2020, aes(fill = tx_mor_local20), color = NA, size = 0.15)+ ## geometria dos municípios
labs(title = "Taxa de mortalidade hospitalar por SRAG por COVID-19 em 2020",
caption = "Fonte: Elaboração própria")+ ## titulo e legenda
scale_fill_gradientn(colours = cores2, limits = c(0.00, 15.00),
name="Taxa mortalidade", labels = label_number(big.mark="."))+ ## cores
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_rect(fill = "white")) ## configuração do tema
### 2020
ggplot()+ ## plotagem
geom_sf(data = juntos2020, aes(fill = tx_mor_local20), color = NA, size = 0.15)+ ## geometria dos municípios
labs(title = "Taxa de mortalidade hospitalar por SRAG por COVID-19 em 2020",
caption = "Fonte: Elaboração própria")+ ## titulo e legenda
scale_fill_gradientn(colours = cores2, limits = c(0.00, 15.00),
name="Taxa mortalidade", labels = label_number(big.mark="."))+ ## cores
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_rect(fill = "white")) ## configuração do tema
### 2020
ggplot()+ ## plotagem
geom_sf(data = juntos2020, aes(fill = tx_mor_local20), color = NA, size = 0.15)+ ## geometria dos municípios
labs(title = "Taxa de mortalidade hospitalar por SRAG por COVID-19 em 2020",
caption = "Fonte: Elaboração própria")+ ## titulo e legenda
scale_fill_gradientn(colours = cores2, limits = c(0.00, 15.00),
name="Taxa mortalidade", labels = label_number(big.mark="."))+ ## cores
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_rect(fill = "white")) ## configuração do tema
### 2020
ggplot()+ ## plotagem
geom_sf(data = juntos2020, aes(fill = tx_mor_local20), color = NA, size = 0.15)+ ## geometria dos municípios
labs(title = "Taxa de mortalidade hospitalar por SRAG por COVID-19 em 2020",
caption = "Fonte: Elaboração própria")+ ## titulo e legenda
scale_fill_gradientn(colours = cores2, limits = c(0.00, 15.00),
name="Taxa mortalidade", labels = label_number(big.mark="."))+ ## cores
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_rect(fill = "white")) ## configuração do tema
### 2021
ggplot()+ ## plotagem
geom_sf(data = juntos2021, aes(fill = tx_mor_local21), color = NA, size = 0.15)+ ## geometria dos municípios
labs(title = "Taxa de mortalidade hospitalar por SRAG por COVID-19 em 2021",
caption = "Fonte: Elaboração própria")+ ## titulo e legenda
scale_fill_gradientn(colours = cores, limits = c(0.00, 15.00),
name="Taxa mortalidade", labels = label_number(big.mark="."))+ ## cores
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_rect(fill = "white")) ## configuração do tema
### 2020
ggplot()+ ## plotagem
geom_sf(data = juntos2020, aes(fill = tx_mor_local20), color = NA, size = 0.15)+ ## geometria dos municípios
labs(title = "Taxa de mortalidade hospitalar por SRAG por COVID-19 em 2020",
caption = "Fonte: Elaboração própria")+ ## titulo e legenda
scale_fill_gradientn(colours = cores2, limits = c(0.00, 15.00),
name="Taxa mortalidade", labels = label_number(big.mark="."))+ ## cores
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_rect(fill = "white")) ## configuração do tema
### 2020
ggplot()+ ## plotagem
geom_sf(data = juntos2020, aes(fill = tx_mor_local20), color = NA, size = 0.15)+ ## geometria dos municípios
labs(title = "Taxa de mortalidade hospitalar por SRAG por COVID-19 em 2020",
caption = "Fonte: Elaboração própria")+ ## titulo e legenda
scale_fill_gradientn(colours = cores2, limits = c(0.00, 15.00),
name="Taxa mortalidade", labels = label_number(big.mark="."))+ ## cores
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_rect(fill = "white")) ## configuração do tema
### 2020
ggplot()+ ## plotagem
geom_sf(data = juntos2020, aes(fill = tx_mor_local20), color = NA, size = 0.15)+ ## geometria dos municípios
labs(title = "Taxa de mortalidade hospitalar por SRAG por COVID-19 em 2020",
caption = "Fonte: Elaboração própria")+ ## titulo e legenda
scale_fill_gradientn(colours = cores2, limits = c(0.00, 15.00),
name="Taxa mortalidade"))+ ## cores
, labels = label_number(big.mark="."
### 2020
ggplot()+ ## plotagem
geom_sf(data = juntos2020, aes(fill = tx_mor_local20), color = NA, size = 0.15)+ ## geometria dos municípios
labs(title = "Taxa de mortalidade hospitalar por SRAG por COVID-19 em 2020",
caption = "Fonte: Elaboração própria")+ ## titulo e legenda
scale_fill_gradientn(colours = cores2, limits = c(0.00, 15.00),
name="Taxa mortalidade", labels = label_number(big.mark="."))+ ## cores
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_rect(fill = "white")) ## configuração do tema
library(dplyr)
library(rstatix)
library(ggplot2)
library(geobr)
library(sf)
library(dplyr)
library(rio)
library(readr)
library(scales)
### 2020
ggplot()+ ## plotagem
geom_sf(data = juntos2020, aes(fill = tx_mor_local20), color = NA, size = 0.15)+ ## geometria dos municípios
labs(title = "Taxa de mortalidade hospitalar por SRAG por COVID-19 em 2020",
caption = "Fonte: Elaboração própria")+ ## titulo e legenda
scale_fill_gradientn(colours = cores2, limits = c(0.00, 15.00),
name="Taxa mortalidade", labels = label_number(big.mark="."))+ ## cores
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_rect(fill = "white")) ## configuração do tema
# set da pasta de trabalho
#<<<<<<< HEAD
setwd("D:\\Mestrado\\1Sem_23\\Ferramentas computacionais\\projeto_final\\base_dados")
dados_covid_sp <- read.csv('dados_covid_sp.csv', sep = ";")
base_sp <- read.csv('sp.csv', sep = ";")
# Tratamento da base de dados
glimpse(dados_covid_sp)
dados_covid_sp$datahora <- as.Date(dados_covid_sp$datahora,
format = '%Y-%m-%d') #convertendo datahora para data
glimpse(dados_covid_sp)
# excluindo colunas que não iremos usar
dados_covid_sp_tratado <- select(dados_covid_sp, -c(2,6,9))
# excluindo colunas que não iremos usar
dados_covid_sp_tratado <- select(dados_covid_sp, -c(2,6,9))
dados_covid_sp$datahora <- as.Date(dados_covid_sp$datahora,
format = '%Y-%m-%d') #convertendo datahora para data
glimpse(dados_covid_sp)
# excluindo colunas que não iremos usar
dados_covid_sp_tratado <- select(dados_covid_sp, -c(2,6,9))
# carregando pacotes
library(dplyr)
library(rstatix)
library(ggplot2)
# excluindo colunas que não iremos usar
dados_covid_sp_tratado <- select(dados_covid_sp, -c(2,6,9))
# excluindo colunas que não iremos usar
dados_covid_sp_tratado <- select(dados_covid_sp, -c(2,6,9))
dados_covid_sp <- read.csv('dados_covid_sp.csv', sep = ";")
base_sp <- read.csv('sp.csv', sep = ";")
# Tratamento da base de dados
glimpse(dados_covid_sp)
dados_covid_sp$datahora <- as.Date(dados_covid_sp$datahora,
format = '%Y-%m-%d') #convertendo datahora para data
glimpse(dados_covid_sp)
# excluindo colunas que não iremos usar
dados_covid_sp_tratado <- select(dados_covid_sp, -c(2,6,9))
# excluindo colunas que não iremos usar
dados_covid_sp_tratado <- select(dados_covid_sp, -c(2,6,9))
# excluindo colunas que não iremos usar
dados_covid_sp_tratado <- select(dados_covid_sp, -c(2,6,9))
# verificando valores vazios
dados_covid_sp_tratado %>%
sapply(function(x) sum(is.na(x))) # valores NA
dados_covid_sp_tratado %>%
sapply(function(x) sum(is.nan(x))) # valores NAN
# excluindo colunas que não iremos usar
dados_covid_sp_tratado <- select(dados_covid_sp, -c(2,6,9))
install.packages("dplyr")
# Tratamento da base de dados
glimpse(dados_covid_sp)
dados_covid_sp$datahora <- as.Date(dados_covid_sp$datahora,
format = '%Y-%m-%d') #convertendo datahora para data
glimpse(dados_covid_sp)
# excluindo colunas que não iremos usar
dados_covid_sp_tratado <- select(dados_covid_sp, -c(2,6,9))
# plot do gráfico: total de casos acumulado
casos_mes_ano %>%
ggplot(aes(x = datahora, y = total_casos * 1e-6)) +
geom_density(fill = cores[8], stat = "identity", alpha = 0.3) +
scale_color_manual(values = cores) +
theme ()+
theme(panel.grid = element_blank(),  # Remove as linhas de grade
plot.background = element_rect(fill = "white")) +
labs(x = "Ano",
y = expression(paste("Total de Casos (", 10^6, ")")),
title = "Evolução dos Casos no Estado de São Paulo") +
scale_y_continuous(labels = scales::comma, breaks = scales::pretty_breaks(5))
base_sp <- read.csv('sp.csv', sep = ";")
# Tratamento da base de dados
glimpse(dados_covid_sp)
dados_covid_sp$datahora <- as.Date(dados_covid_sp$datahora,
format = '%Y-%m-%d') #convertendo datahora para data
glimpse(dados_covid_sp)
# excluindo colunas que não iremos usar
dados_covid_sp_tratado <- select(dados_covid_sp, -c(2,6,9))
# verificando valores vazios
dados_covid_sp_tratado %>%
sapply(function(x) sum(is.na(x))) # valores NA
View(dados_covid_sp)
# excluindo colunas que não iremos usar
dados_covid_sp_tratado <- select(dados_covid_sp)
, -c(2,6,9)
# excluindo colunas que não iremos usar
dados_covid_sp_tratado <- select(dados_covid_sp, -c(2,6,9))
# excluindo colunas que não iremos usar
dados_covid_sp_tratado <- dados_covid_sp
# verificando valores vazios
dados_covid_sp_tratado %>%
sapply(function(x) sum(is.na(x))) # valores NA
dados_covid_sp_tratado %>%
sapply(function(x) sum(is.nan(x))) # valores NAN
# Total de casos por ano/mes acumulado
dados_covid_sp_tratado$ano_mes <- format(dados_covid_sp_tratado$datahora, "%Y-%m")
casos_mes_ano <- dados_covid_sp_tratado %>%
group_by(datahora) %>%
summarise(total_casos = sum(casos))
# plot do gráfico: total de casos acumulado
casos_mes_ano %>%
ggplot(aes(x = datahora, y = total_casos * 1e-6)) +
geom_density(fill = cores[8], stat = "identity", alpha = 0.3) +
scale_color_manual(values = cores) +
theme ()+
theme(panel.grid = element_blank(),  # Remove as linhas de grade
plot.background = element_rect(fill = "white")) +
labs(x = "Ano",
y = expression(paste("Total de Casos (", 10^6, ")")),
title = "Evolução dos Casos no Estado de São Paulo") +
scale_y_continuous(labels = scales::comma, breaks = scales::pretty_breaks(5))
# Total de novos casos por dia
novos_casos_mes_ano <- dados_covid_sp_tratado %>%
group_by(datahora) %>%
summarise(novos_casos = sum(casos_novos))
novos_casos_mes_ano %>%
mutate(datahora = as.POSIXct(datahora)) %>%
ggplot(aes(x = datahora, y = novos_casos *1e-3)) +
geom_line(color = "blue") +
geom_smooth(method = "loess", se = FALSE, color = "red") +
theme_minimal() +
labs(x = "Ano/Mês", y = "Novos Casos (x 10³)", title = "Novos Casos por Dia no Estado de São Paulo") +
scale_x_datetime(date_labels = "%Y-%m", date_breaks = "6 month")
novos_casos_mes_ano %>%
mutate(datahora = as.POSIXct(datahora)) %>%
ggplot(aes(x = datahora, y = novos_casos *1e-3)) +
geom_line(color = "blue") +
geom_smooth(method = "loess", se = FALSE, color = "red") +
theme_minimal() +
labs(x = "Ano/Mês", y = "Novos Casos (x 10³)", title = "Novos Casos por Dia no Estado de São Paulo") +
scale_x_datetime(date_labels = "%Y-%m", date_breaks = "6 month")
# plot do gráfico: total de casos acumulado
casos_mes_ano %>%
ggplot(aes(x = datahora, y = total_casos * 1e-6)) +
geom_density(fill = cores[8], stat = "identity", alpha = 0.3) +
scale_color_manual(values = cores) +
theme ()+
theme(panel.grid = element_blank(),  # Remove as linhas de grade
plot.background = element_rect(fill = "white")) +
labs(x = "Ano",
y = expression(paste("Total de Casos (", 10^6, ")")),
title = "Evolução dos Casos no Estado de São Paulo") +
scale_y_continuous(labels = scales::comma, breaks = scales::pretty_breaks(5))
cores <- rcartocolor::carto_pal(12, "Bold")
# plot do gráfico: total de casos acumulado
casos_mes_ano %>%
ggplot(aes(x = datahora, y = total_casos * 1e-6)) +
geom_density(fill = cores[8], stat = "identity", alpha = 0.3) +
scale_color_manual(values = cores) +
theme ()+
theme(panel.grid = element_blank(),  # Remove as linhas de grade
plot.background = element_rect(fill = "white")) +
labs(x = "Ano",
y = expression(paste("Total de Casos (", 10^6, ")")),
title = "Evolução dos Casos no Estado de São Paulo") +
scale_y_continuous(labels = scales::comma, breaks = scales::pretty_breaks(5))
setwd("D:/Mestrado/1Sem_23/Ferramentas computacionais/projeto_final/Estudo")
knitr::opts_chunk$set(echo = TRUE)
dados_covid_sp <- read.csv("dados_covid_sp.csv", sep = ";")
# ordenando os dados por ordem alfabética de município
dados_ordem <- dados_covid_sp[order(dados_covid_sp$nome_munic), ]
# convertendo a variável datahora para o formato de data
dados_ordem <- as.Date(dados_covid_sp$datahora)
dados_covid_sp <- read.csv('dados/dados_covid_sp.csv', sep = ";")
dados_covid_sp <- read.csv('D:/Mestrado/1Sem_23/Ferramentas computacionais/projeto_final/Estudo/dados/dados_covid_sp.csv', sep = ";")
base_sp <- read.csv('dados/sp.csv', sep = ";")
dados_covid_sp <- read.csv('D:/Mestrado/1Sem_23/Ferramentas computacionais/projeto_final/Estudo/dados/dados_covid_sp.csv', sep = ";")
base_sp <- read.csv('D:/Mestrado/1Sem_23/Ferramentas computacionais/projeto_final/Estudo/dados/sp.csv', sep = ";")
# importação e instalação, caso seja a primeira vez no pc
remotes::install_github("rpradosiqueira/brazilmaps")
library(dplyr)
library(rstatix)
library(ggplot2)
library(geobr)
library(sf)
library(dplyr)
library(rio)
library(readr)
library(scales)
#base online, atualizada
# 2020
BR20 <- fread("https://s3.sa-east-1.amazonaws.com/ckan.saude.gov.br/SRAG/2020/INFLUD20-29-08-2022.csv")
## 2020
## base online, atualizada
BR20 <- fread("https://s3.sa-east-1.amazonaws.com/ckan.saude.gov.br/SRAG/2020/INFLUD20-29-08-2022.csv")
#### 2021
## base online atualizada
BR21 <- fread("https://s3.sa-east-1.amazonaws.com/ckan.saude.gov.br/SRAG/2021/INFLUD21-29-08-2022.csv")
#### 2022
## base excel e online, atualizada
BR22 <- fread("https://s3.sa-east-1.amazonaws.com/ckan.saude.gov.br/SRAG/2022/INFLUD22-29-08-2022.csv")
var.20 <- BR20[,c("DT_NOTIFIC", "SEM_NOT", "ID_MUNICIP", "CO_MUN_NOT", "SG_UF_NOT",
"ID_REGIONA", "ID_UNIDADE", "NU_IDADE_N", "CS_SEXO", "CS_RACA",
"ID_MN_RESI", "CO_MUN_RES", "CS_ZONA", "HOSPITAL", "EVOLUCAO",
"FATOR_RISC", "UTI", "SUPORT_VEN", "CLASSI_FIN")]
## filtro para variáveis de interesse da pesquisa
var.21 <- BR21[,c("DT_NOTIFIC", "SEM_NOT", "ID_MUNICIP", "CO_MUN_NOT", "SG_UF_NOT",
"ID_REGIONA", "ID_UNIDADE", "NU_IDADE_N", "CS_SEXO", "CS_RACA",
"ID_MN_RESI", "CO_MUN_RES", "CS_ZONA", "HOSPITAL", "EVOLUCAO",
"FATOR_RISC", "UTI", "SUPORT_VEN", "CLASSI_FIN")]
## filtro para variáveis de interesse da pesquisa
var.22 <- BR22[,c("DT_NOTIFIC", "SEM_NOT", "ID_MUNICIP", "CO_MUN_NOT", "SG_UF_NOT",
"ID_REGIONA", "ID_UNIDADE", "NU_IDADE_N", "CS_SEXO", "CS_RACA",
"ID_MN_RESI", "CO_MUN_RES", "CS_ZONA", "HOSPITAL", "EVOLUCAO",
"FATOR_RISC", "UTI", "SUPORT_VEN", "CLASSI_FIN")]
SP20 <- filter(var.20, SG_UF_NOT == 'SP')
SP21 <- filter(var.21, SG_UF_NOT == 'SP')
SP22 <- filter(var.22, SG_UF_NOT == 'SP')
## 2020
# filtro para as variáveis de interesse da pesquisa
var.20 <- BR20[,c("DT_NOTIFIC", "SEM_NOT", "ID_MUNICIP", "CO_MUN_NOT", "SG_UF_NOT",
"ID_REGIONA", "ID_UNIDADE", "NU_IDADE_N", "CS_SEXO", "CS_RACA",
"ID_MN_RESI", "CO_MUN_RES", "CS_ZONA", "HOSPITAL", "EVOLUCAO",
"FATOR_RISC", "UTI", "SUPORT_VEN", "CLASSI_FIN")]
# filtro para as notificações do estado de São Paulo
SP20 <- filter(var.20, SG_UF_NOT == 'SP')
## 2021
# filtro para variáveis de interesse da pesquisa
var.21 <- BR21[,c("DT_NOTIFIC", "SEM_NOT", "ID_MUNICIP", "CO_MUN_NOT", "SG_UF_NOT",
"ID_REGIONA", "ID_UNIDADE", "NU_IDADE_N", "CS_SEXO", "CS_RACA",
"ID_MN_RESI", "CO_MUN_RES", "CS_ZONA", "HOSPITAL", "EVOLUCAO",
"FATOR_RISC", "UTI", "SUPORT_VEN", "CLASSI_FIN")]
# filtro para as notificações do estado de São Paulo
SP21 <- filter(var.21, SG_UF_NOT == 'SP')
## 2022
# filtro para variáveis de interesse da pesquisa
var.22 <- BR22[,c("DT_NOTIFIC", "SEM_NOT", "ID_MUNICIP", "CO_MUN_NOT", "SG_UF_NOT",
"ID_REGIONA", "ID_UNIDADE", "NU_IDADE_N", "CS_SEXO", "CS_RACA",
"ID_MN_RESI", "CO_MUN_RES", "CS_ZONA", "HOSPITAL", "EVOLUCAO",
"FATOR_RISC", "UTI", "SUPORT_VEN", "CLASSI_FIN")]
# filtro para as notificações do estado de São Paulo
SP22 <- filter(var.22, SG_UF_NOT == 'SP')
# dados gerais para sivesp/gripe
siveSP20 <- read.csv("sivepSP20.csv", header = TRUE, sep = ";", dec = ",")
## arquivo excel com os dados da covid-19 para o SP
write.table(SP22, file= "siveSP22.csv", sep=";", dec=",")
write.table(SP21, file= "siveSP21.csv", sep=";", dec=",")
write.table(SP20, file= "siveSP20.csv", sep=";", dec=",")
# dados gerais para sivesp/gripe
siveSP20 <- read.csv("sivepSP20.csv", header = TRUE, sep = ";", dec = ",")
# dados gerais para sivesp/gripe
siveSP20 <- read.csv("siveSP20.csv", header = TRUE, sep = ";", dec = ",")
siveSP21 <- read.csv("siveSP21.csv", header = TRUE, sep = ";", dec = ",")
siveSP22 <- read.csv("siveSP22.csv", header = TRUE, sep = ";", dec = ",")
table(siveSP20$CS_SEXO)
# importação e instalação, caso seja a primeira vez no pc
remotes::install_github("rpradosiqueira/brazilmaps")
library(dplyr)
library(rstatix)
library(ggplot2)
library(geobr)
library(sf)
library(dplyr)
library(rio)
library(readr)
library(scales)
#base online, atualizada
# 2020
BR20 <- BR20 #fread("https://s3.sa-east-1.amazonaws.com/ckan.saude.gov.br/SRAG/2020/INFLUD20-29-08-2022.csv")
# 2021
BR21 <- BR21 #fread("https://s3.sa-east-1.amazonaws.com/ckan.saude.gov.br/SRAG/2021/INFLUD21-29-08-2022.csv")
# 2022
BR22 <- BR22 #fread("https://s3.sa-east-1.amazonaws.com/ckan.saude.gov.br/SRAG/2022/INFLUD22-29-08-2022.csv")
codigos <- read_excel("D:/Mestrado/1Sem_23/Ferramentas computacionais/projeto_final/SRAGRELATORIO_DTB_BRASIL_MUNICIPIO.xls")
library(dplyr)
library(rstatix)
library(ggplot2)
library(geobr)
library(knitr)
library(kableExtra)
library(htmltools)
library(scales)
library(readr)
library(rio)
library(sf)
library(readxl)
cores <- rcartocolor::carto_pal(12, "Bold")
cores2 <- rcartocolor::carto_pal(6, "SunsetDark")
codigos <- read_excel("D:/Mestrado/1Sem_23/Ferramentas computacionais/projeto_final/SRAGRELATORIO_DTB_BRASIL_MUNICIPIO.xls")
codigos <- read_excel("D:/Mestrado/1Sem_23/Ferramentas computacionais/projeto_final/SRAGRELATORIO_DTB_BRASIL_MUNICIPIO.xls")
codigos <- read_excel("D:/Mestrado/1Sem_23/Ferramentas computacionais/projeto_final/SRAG/SRAGRELATORIO_DTB_BRASIL_MUNICIPIO.xls")
codigos <- read_excel("D:/Mestrado/1Sem_23/Ferramentas computacionais/projeto_final/SRAG/SRAGRELATORIO_DTB_BRASIL_MUNICIPIO.xls")
codigos <- read_excel("D:/Mestrado/1Sem_23/Ferramentas computacionais/projeto_final/SRAG/RELATORIO_DTB_BRASIL_MUNICIPIO.xls")
