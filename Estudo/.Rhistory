library(dplyr)
library(rio)
library(readr)
datasets <- list_geobr()
mun_ms <- read_municipality(
code_muni = "MS",
year = 2018
)
# Como baixamos as informações sobre o estado de MS, podemos plotar um gráfico
plot(mun_ms)
class(mun_ms)
library("basedosdados")
query <- "SELECT * FROM `basedosdados.br_bd_diretorios_brasil.municipio`"
View(datasets)
# carregando os pacotes necessários para o exemplo
library(geobr)
library(ggplot2)
library(sf)
library(dplyr)
library(rio)
knitr::opts_chunk$set(echo = TRUE)
library(geobr)
library(ggplot2)
library(sf)
library(dplyr)
library(rio)
library(readr)
library(geobr)
library(ggplot2)
library(sf)
library(dplyr)
library(rio)
library(readr)
library(geobr)
library(ggplot2)
library(sf)
library(dplyr)
library(rio)
library(readr)
library(geobr)
library(ggplot2)
library(sf)
library(dplyr)
library(rio)
library(readr)
library(geobr)
library(ggplot2)
library(sf)
library(dplyr)
library(rio)
library(readr)
datasets <- list_geobr()
View(datasets)
state <- read_state(
code_state = "AM",
year = 2018,
showProgress = TRUE
)
plot(state['Amazonas'])
plot(state['name_muni'])
state <- read_state(
code_state = "AM",
year = 2018,
showProgress = TRUE
)
plot(state['name_muni'])
plot(state['name_state'])
plot(state['name_state'], title = 'Amazonas') # plotamos a imagem do estado do Amazonas
plot(state['name_state']) # plotamos a imagem do estado do Amazonas
plot(state['name_state'], main = 'Amazonas') # plotamos a imagem do estado do Amazonas
read_state()
states <- read_state()
View(states)
View(datasets)
head(states)
# Remove plot axis
no_axis <- theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
# Plot all Brazilian states
ggplot() +
geom_sf(data=states, fill="#2D3E50", color="#FEBF57", size=.15, show.legend = FALSE) +
labs(subtitle="States", size=8) +
theme_minimal() +
no_axis
# Plot all Brazilian states
ggplot() +
geom_sf(data=states, fill="#2D3E50", color="#FEBF57", size=.15, show.legend = FALSE) +
labs(title="States", size=8) +
theme_minimal() +
no_axis
# Plot all Brazilian states
ggplot() +
geom_sf(data=states, fill="#2D3E50", color="#FEBF57", size=.15, show.legend = FALSE) +
labs(title="Estados do Brasil", size=12) +
theme_minimal() +
no_axis
# plot
ggplot() +
geom_sf(data=all_muni, fill="#2D3E50", color="#FEBF57", size=.15, show.legend = FALSE) +
labs(subtitle="Municipalities of Rio de Janeiro, 2000", size=8) +
theme_minimal() +
no_axis
# Download all municipalities of Rio
all_muni <- read_municipality(
code_muni = "RJ",
year= 2010,
showProgress = FALSE
)
# Download all municipalities of Rio
all_muni <- read_municipality(
code_muni = "RJ",
year= 2010,
showProgress = FALSE
)
# plot
ggplot() +
geom_sf(data=all_muni, fill="#2D3E50", color="#FEBF57", size=.15, show.legend = FALSE) +
labs(subtitle="Municipalities of Rio de Janeiro, 2000", size=8) +
theme_minimal() +
no_axis
# plot
ggplot() +
geom_sf(data=all_muni, fill="#2D3E50", color="#FEBF57", size=.15, show.legend = FALSE) +
labs(title="Municípios do Rio de Janeiro, 2000", size=12) +
theme_minimal() +
no_axis
library(basedosdados)
set_billing_id('basedosdados-392218')
df <- read_sql(
'SELECT *
FROM `basedosdados.mundo_onu_adh.brasil` '
)
View(df)
library(basedosdados)
set_billing_id('basedosdados-392218')
df <- read_sql(
'SELECT *
FROM `basedosdados.mundo_onu_adh.municipio` '
)
View(df)
View(df)
library(basedosdados)
set_billing_id('basedosdados-392218')
df <- read_sql(
'SELECT *
FROM `basedosdados.mundo_onu_adh.uf` '
)
View(df)
municipio
library(basedosdados)
set_billing_id('basedosdados-392218')
df <- read_sql(
'SELECT *
FROM `basedosdados.mundo_onu_adh.municipio` '
)
View(df)
View(df)
library(readxl)
atlas2013_dadosbrutos_pt <- read_excel("dados/Atlas_2013_municipal_estadual_Brasil.xlsx",
sheet = "MUN 91-00-10")
# reduzir linhas para 2010 e MS
# usando a funcao subset para pegar as colunas de IDH até a última ()
dados_ms <- subset(Atlas_2013_municipal_estadual_Brasil, UF == '50' & ANO == '2010',
select=c(Codmun7,IDHM,IDHM_E,IDHM_L,IDHM_R))
library(readxl)
atlas2013_dadosbrutos_pt <- read_excel("dados/Atlas_2013_municipal_estadual_Brasil.xlsx",
sheet = "MUN 91-00-10")
# reduzir linhas para 2010 e MS
# usando a funcao subset para pegar as colunas de IDH até a última ()
dados_ms <- subset(dados/Atlas_2013_municipal_estadual_Brasil, UF == '50' & ANO == '2010',
select=c(Codmun7,IDHM,IDHM_E,IDHM_L,IDHM_R))
library(readxl)
atlas2013_dadosbrutos_pt <- read_excel("dados/Atlas_2013_municipal_estadual_Brasil.xlsx",
sheet = "MUN 91-00-10")
# reduzir linhas para 2010 e MS
# usando a funcao subset para pegar as colunas de IDH até a última ()
dados_ms <- subset(/dados/Atlas_2013_municipal_estadual_Brasil, UF == '50' & ANO == '2010',
library(readxl)
atlas2013_dadosbrutos_pt <- read_excel("dados/Atlas_2013_municipal_estadual_Brasil.xlsx",
sheet = "MUN 91-00-10")
# reduzir linhas para 2010 e MS
# usando a funcao subset para pegar as colunas de IDH até a última ()
dados_ms <- subset(Atlas_2013_municipal_estadual_Brasil.xlsx, UF == '50' & ANO == '2010',
select=c(Codmun7,IDHM,IDHM_E,IDHM_L,IDHM_R))
library(readxl)
atlas2013_dadosbrutos_pt <- read_excel("dados/Atlas_2013_municipal_estadual_Brasil.xlsx",
sheet = "MUN 91-00-10")
# reduzir linhas para 2010 e MS
# usando a funcao subset para pegar as colunas de IDH até a última ()
dados_ms <- subset(atlas2013_dadosbrutos_pt, UF == '50' & ANO == '2010',
select=c(Codmun7,IDHM,IDHM_E,IDHM_L,IDHM_R))
View(df)
View(dados_ms)
library(geobr)
# sugiro permanecer o timeout anterior, options(timeout= 4000000)
all_mun_ms <- read_municipality(code_muni=50, year=2010)
dataset_final = left_join(all_mun_ms, dados_ms, by=c("code_muni"="Codmun7"))
ggplot() +
geom_sf(data=dataset_final, aes(fill=IDHM), color= NA, size=.15)+
labs(title="IDHM 2013 (ano base 2010) dos Municipíos de MS",
caption='Fonte: Elaboração própria', size=8)+
scale_fill_distiller(palette = "Greens", limits=c(0.0, 1.0),
name="Code_muni")+
theme_minimal()
.5
ggplot() +
geom_sf(data=dataset_final, aes(fill=IDHM), color= NA, size=.15)+
labs(title="IDHM 2013 (ano base 2010) dos Municipíos de MS",
caption='Fonte: Elaboração própria', size=8)+
scale_fill_distiller(palette = "Greens", limits=c(0.5, 0.8),
name="Code_muni")+
theme_minimal()
min(dataset_final$IDHM)
dataset_final = left_join(all_mun_ms, dados_ms, by=c("code_muni"="Codmun7"))
max(dataset_final$IDHM)
min(dataset_final$IDHM)
ggplot() +
geom_sf(data=dataset_final, aes(fill=IDHM), color= NA, size=.15)+
labs(title="IDHM 2013 (ano base 2010) dos Municipíos de MS",
caption='Fonte: Elaboração própria', size=8)+
scale_fill_distiller(palette = "Greens", limits=c(0.5, 0.8),
name="Code_muni")+
theme_minimal()
---
title: "O Pacote geobr"
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
---
title: "O Pacote geobr"
```{r setup, include=FALSE}
---
title: "O Pacote geobr"
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
# O Pacote ``geobr``
Para começarmos o estudo do pacote ``geobr`` precisamos carregar os seguintes pacotes no R
```{r}
library(geobr)
library(geobr)
library(ggplot2)
library(sf)
library(dplyr)
library(sf)
library(dplyr)
library(rio)
library(geobr)
library(ggplot2)
library(sf)
library(dplyr)
library(rio)
library(readr)
A biblioteca ``geobr`` é uma biblioteca útil quando o assunto é construção de mapas, no caso, do Brasil, uma vez que fornece malhas digitais de divisões territoriais variadas. Podemos investigar os datasets disponíveis por meio da seguinte função:
```{r}
datasets <- list_geobr()
Veja que há 27 datasets disponíveis, entre eles, os mais relevantes ao estudo atual são ``read_state()`` , ``read_municipality()`` e ``read_region()``, que contém dados da geometria espacial dos estados do Brasil. Veja o seguinte exemplo simples:
state <- read_state(
code_state = "AM",
year = 2018,
showProgress = TRUE
)
state <- read_state(
code_state = "AM",
year = 2018,
showProgress = TRUE
)
plot(state['name_state'], main = 'Amazonas') # plotamos a imagem do estado do Amazonas
---
title: "O Pacote geobr"
---
title: "O Pacote geobr"
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
# O Pacote ``geobr``
Para começarmos o estudo do pacote ``geobr`` precisamos carregar os seguintes pacotes no R
```{r}
library(geobr)
library(ggplot2)
library(sf)
library(dplyr)
library(rio)
library(readr)
library(geobr)
library(ggplot2)
library(sf)
library(dplyr)
library(rio)
library(readr)
A biblioteca ``geobr`` é uma biblioteca útil quando o assunto é construção de mapas, no caso, do Brasil, uma vez que fornece malhas digitais de divisões territoriais variadas. Podemos investigar os datasets disponíveis por meio da seguinte função:
```{r}
datasets <- list_geobr()
datasets <- list_geobr()
Veja que há 27 datasets disponíveis, entre eles, os mais relevantes ao estudo atual são ``read_state()`` , ``read_municipality()`` e ``read_region()``, que contém dados da geometria espacial dos estados do Brasil. Veja o seguinte exemplo simples:
```{r}
state <- read_state(
code_state = "AM",
year = 2018,
showProgress = TRUE
)
plot(state['name_state'], main = 'Amazonas') # plotamos a imagem do estado do Amazonas
plot(state['name_state'], main = 'Amazonas') # plotamos a imagem do estado do Amazonas
Vale ressaltar que quando nenhum parâmetro é passado na função ``read_state()``, ele retorna o dataset por completo a partir de um ano, veja:
```{r}
states <- read_state()
states <- read_state()
head(states)
```{r}
```{r}
# Remove plot axis
no_axis <- theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
# Plot all Brazilian states
ggplot() +
geom_sf(data=states, fill="#2D3E50", color="#FEBF57", size=.15, show.legend = FALSE) +
labs(title="Estados do Brasil", size=12) +
theme_minimal() +
no_axis
# Plot all Brazilian states
ggplot() +
geom_sf(data=states, fill="#2D3E50", color="#FEBF57", size=.15, show.legend = FALSE) +
labs(title="Estados do Brasil", size=12) +
theme_minimal() +
no_axis
```{r}
# Download all municipalities of Rio
all_muni <- read_municipality(
code_muni = "RJ",
year= 2010,
showProgress = FALSE
)
# plot
ggplot() +
geom_sf(data=all_muni, fill="#2D3E50", color="#FEBF57", size=.15, show.legend = FALSE) +
labs(title="Municípios do Rio de Janeiro, 2000", size=12) +
theme_minimal() +
no_axis
# plot
ggplot() +
geom_sf(data=all_muni, fill="#2D3E50", color="#FEBF57", size=.15, show.legend = FALSE) +
labs(title="Municípios do Rio de Janeiro, 2000", size=12) +
theme_minimal() +
no_axis
## Construindo um mapa o IDHM dos municípios de Mato Grosso do Sul
Inicialmente, vamos fazer a leitura dos dados
```{r}
library(readxl)
atlas2013_dadosbrutos_pt <- read_excel("dados/Atlas_2013_municipal_estadual_Brasil.xlsx",
sheet = "MUN 91-00-10")
atlas2013_dadosbrutos_pt <- read_excel("dados/Atlas_2013_municipal_estadual_Brasil.xlsx",
sheet = "MUN 91-00-10")
# reduzir linhas para 2010 e MS
# usando a funcao subset para pegar as colunas de IDH até a última ()
dados_ms <- subset(atlas2013_dadosbrutos_pt, UF == '50' & ANO == '2010',
select=c(Codmun7,IDHM,IDHM_E,IDHM_L,IDHM_R))
```{r}
max(dataset_final$IDHM)
min(dataset_final$IDHM)
Agora, conseguiremos plotar o gráfico do IDH municipal do estado de MS. Ademais, como vimos anteriormente, que o IDHM máximo é 0.784 e o mínimo, 0.526, vamos estabelecer os limites de $(0.5, 0.8)$ na escala do mapa:
```{r}
ggplot() +
geom_sf(data=dataset_final, aes(fill=IDHM), color= NA, size=.15)+
labs(title="IDHM 2013 (ano base 2010) dos Municipíos de MS",
caption='Fonte: Elaboração própria', size=8)+
scale_fill_distiller(palette = "Greens", limits=c(0.5, 0.8),
name="Code_muni")+
theme_minimal()
ggplot() +
geom_sf(data=dataset_final, aes(fill=IDHM), color= NA, size=.15)+
labs(title="IDHM 2013 (ano base 2010) dos Municipíos de MS",
caption='Fonte: Elaboração própria', size=8)+
scale_fill_distiller(palette = "Greens", limits=c(0.5, 0.8),
name="Code_muni")+
theme_minimal()
ggplot() +
geom_sf(data=dataset_final, aes(fill=IDHM), color= NA, size=.15)+
labs(title="IDHM 2013 (ano base 2010) dos Municipíos de MS",
caption='Fonte: Elaboração própria', size=8)+
scale_fill_distiller(palette = "Greens", limits=c(0.5, 0.8),
name="Code_muni")+
theme_minimal()
View(df)
View(all_muni)
View(atlas2013_dadosbrutos_pt)
View(atlas2013_dadosbrutos_pt)
View(atlas2013_dadosbrutos_pt)
library(readxl)
atlas2013_dadosbrutos_pt <- read_excel("dados/Atlas_2013_municipal_estadual_Brasil.xlsx",
sheet = "MUN 91-00-10")
# reduzir linhas para 2010 e MS
# usando a funcao subset para pegar as colunas de IDH até a última ()
dados_ms <- subset(atlas2013_dadosbrutos_pt, UF == '50' & ANO == '2010',
select=c(Codmun7,IDHM,IDHM_E,IDHM_L,IDHM_R))
View(atlas2013_dadosbrutos_pt)
View(all_muni)
library(geobr)
# sugiro permanecer o timeout anterior, options(timeout= 4000000)
all_mun_ms <- read_municipality(code_muni=50, year=2010)
print(dados_sp)
dados_sp <- subset(atlas2013_dadosbrutos_pt, UF =='35' & ANO == '2010',
select = c(Codmun7, IDHM, IDHM_E, IDHM_L, IDHM_R))
print(dados_sp)
all_mun_sp <- read_municipality(code_muni = 50, year = 2010)
Agora, vamos selecionar a esturuta de 2010 para compatibilizar o mapa de SP a partir da biblioteca ``geobr``
dataset_final_sp = left_join(all_mun_sp, dados_sp, by = c("code_muni" = "Codmun7"))
# plot
ggplot() +
geom_sf(data=all_mun_sp, fill="#2D3E50", color="#FEBF57", size=.15, show.legend = FALSE) +
labs(title="Municípios do Rio de Janeiro, 2000", size=12) +
theme_minimal() +
no_axis
all_mun_sp <- read_municipality(code_muni = 35, year = 2010)
all_mun_sp <- read_municipality(code_muni = 35, year = 2010)
# plot
ggplot() +
geom_sf(data=all_mun_sp, fill="#2D3E50", color="#FEBF57", size=.15, show.legend = FALSE) +
labs(title="Municípios do Rio de Janeiro, 2000", size=12) +
theme_minimal() +
no_axis
# plot
ggplot() +
geom_sf(data=all_mun_sp, fill="#2D3E50", color="#FEBF57", size=.15, show.legend = FALSE) +
labs(title="Municípios de São Paulo, 2010", size=12) +
theme_minimal() +
no_axis
dataset_final_sp = left_join(all_mun_sp, dados_sp, by = c("code_muni" = "Codmun7"))
ggplot()+
geom_sf(data = dataset_final_sp, aes(fill = IDHM_E), color = NA, size = .15)+
labs(title = "IDHM Educação 2013 dos Municípios de SP",
caption = "Fonte: Elaboração própria", size = 8)+
scale_fill_distiller(palette = "YlOrRd", limits = c(0.0, 1.0),
name="Code_muni")
ggplot()+
geom_sf(data = dataset_final_sp, aes(fill = IDHM_E), color = NA, size = .15)+
labs(title = "IDHM Educação 2013 dos Municípios de SP",
caption = "Fonte: Elaboração própria", size = 8)+
scale_fill_distiller(palette = "YlOrRd", limits = c(0.0, 1.0),
name="Code_muni")+
theme(plot.title = element_text(hjust = 0.5))
ggplot()+
geom_sf(data = dataset_final_sp, aes(fill = IDHM_E), color = NA, size = .15)+
labs(title = "IDHM Educação 2013 dos Municípios de SP",
caption = "Fonte: Elaboração própria", size = 8)+
scale_fill_distiller(palette = "YlOrRd", limits = c(0.0, 1.0),
name="IHDM_E")+
theme(plot.title = element_text(hjust = 0.5))
# carregando pacotes
library(dplyr)
library(rstatix)
library(ggplot2)
cores <- rcartocolor::carto_pal(12, "Bold")
dados_covid_sp <- read.csv('dados_covid_sp.csv', sep = ";")
base_sp <- read.csv('sp.csv', sep = ";")
dados_covid_sp <- read.csv('dados_covid_sp.csv', sep = ";")
# carregando pacotes
library(dplyr)
library(rstatix)
library(ggplot2)
cores <- rcartocolor::carto_pal(12, "Bold")
dados_covid_sp <- read.csv('dados_covid_sp.csv', sep = ";")
base_sp <- read.csv('sp.csv', sep = ";")
# Tratamento da base de dados
glimpse(dados_covid_sp)
dados_covid_sp$datahora <- as.Date(dados_covid_sp$datahora,
format = '%Y-%m-%d') #convertendo datahora para data
glimpse(dados_covid_sp)
# excluindo colunas que não iremos usar
dados_covid_sp_tratado <- select(dados_covid_sp, -c(2,6,9))
# verificando valores vazios
dados_covid_sp_tratado %>%
sapply(function(x) sum(is.na(x))) # valores NA
dados_covid_sp_tratado %>%
sapply(function(x) sum(is.nan(x))) # valores NAN
# Total de casos por ano/mes acumulado
dados_covid_sp_tratado$ano_mes <- format(dados_covid_sp_tratado$datahora, "%Y-%m")
casos_mes_ano <- dados_covid_sp_tratado %>%
group_by(datahora) %>%
summarise(total_casos = sum(casos))
# plot do gráfico: total de casos acumulado
casos_mes_ano %>%
ggplot(aes(x = datahora, y = total_casos)) +
geom_density(fill = cores[8], stat = "identity", alpha = 0.3) +
scale_color_manual(values = cores) +
theme_bw()+
theme(panel.grid = element_blank(),  # Remove as linhas de grade
plot.background = element_rect(fill = "white")) +
labs(x = "Ano/mês", y = "Total de casos", title = "Total de casos no estado de São Paulo")
# Total de novos casos por dia
novos_casos_mes_ano <- dados_covid_sp_tratado %>%
group_by(datahora) %>%
summarise(novos_casos = sum(casos_novos))
novos_casos_mes_ano %>%
ggplot(aes(x = datahora, y = novos_casos)) +
geom_density(fill = cores[1], stat = "identity", alpha = 0.3) +
scale_color_manual(values = cores) +
theme_bw()+
theme(panel.grid = element_blank(),  # Remove as linhas de grade
plot.background = element_rect(fill = "white")) +
labs(x = "Ano/mês", y = "Total de casos", title = "Novos casos por dia no estado de São Paulo")
# carregando pacotes
library(dplyr)
library(rstatix)
library(ggplot2)
cores <- rcartocolor::carto_pal(12, "Bold")
dados_covid_sp <- read.csv('dados_covid_sp.csv', sep = ";")
base_sp <- read.csv('sp.csv', sep = ";")
# Tratamento da base de dados
glimpse(dados_covid_sp)
# carregando pacotes
library(dplyr)
