format = '%Y-%m-%d') #convertendo datahora para data
glimpse(dados_covid_sp)
# excluindo colunas que não iremos usar
dados_covid_sp_tratado <- select(dados_covid_sp, -c(2,6,9))
# verificando valores vazios
dados_covid_sp_tratado %>%
sapply(function(x) sum(is.na(x))) # valores NA
# carregando pacotes
library(dplyr)
library(rstatix)
library(ggplot2)
cores <- rcartocolor::carto_pal(12, "Bold")
dados_covid_sp <- read.csv('dados/dados_covid_sp.csv', sep = ";")
base_sp <- read.csv('dados/sp.csv', sep = ";")
# Tratamento da base de dados
glimpse(dados_covid_sp)
dados_covid_sp$datahora <- as.Date(dados_covid_sp$datahora,
format = '%Y-%m-%d') #convertendo datahora para data
glimpse(dados_covid_sp)
# excluindo colunas que não iremos usar
dados_covid_sp_tratado <- select(dados_covid_sp, -c(2,6,9))
# verificando valores vazios
dados_covid_sp_tratado %>%
sapply(function(x) sum(is.na(x))) # valores NA
dados_covid_sp_tratado %>%
sapply(function(x) sum(is.nan(x))) # valores NAN
# Total de casos por ano/mes acumulado
dados_covid_sp_tratado$ano_mes <- format(dados_covid_sp_tratado$datahora, "%Y-%m")
casos_mes_ano <- dados_covid_sp_tratado %>%
group_by(datahora) %>%
summarise(total_casos = sum(casos))
# plot do gráfico: total de casos acumulado
casos_mes_ano %>%
ggplot(aes(x = datahora, y = total_casos * 1e-6)) +
geom_density(fill = cores[8], stat = "identity", alpha = 0.3) +
scale_color_manual(values = cores) +
theme ()+
theme(panel.grid = element_blank(),  # Remove as linhas de grade
plot.background = element_rect(fill = "white")) +
labs(x = "Ano",
y = expression(paste("Total de Casos (", 10^6, ")")),
title = "Evolução dos Casos no Estado de São Paulo") +
scale_y_continuous(labels = scales::comma, breaks = scales::pretty_breaks(5))
# Total de novos casos por dia
novos_casos_mes_ano <- dados_covid_sp_tratado %>%
group_by(datahora) %>%
summarise(novos_casos = sum(casos_novos))
novos_casos_mes_ano %>%
mutate(datahora = as.POSIXct(datahora)) %>%
ggplot(aes(x = datahora, y = novos_casos *1e-3)) +
geom_line(color = "blue") +
geom_smooth(method = "loess", se = FALSE, color = "red") +
theme_minimal() +
labs(x = "Ano/Mês", y = "Novos Casos (x 10³)", title = "Novos Casos por Dia no Estado de São Paulo") +
scale_x_datetime(date_labels = "%Y-%m", date_breaks = "6 month")
View(atlas2013_dadosbrutos_pt)
---
title: "O Pacote geobr"
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
# O Pacote ``geobr``
Para começarmos o estudo do pacote ``geobr`` precisamos carregar os seguintes pacotes no R
```{r}
library(geobr)
library(ggplot2)
library(sf)
library(dplyr)
library(rio)
library(readr)
library(geobr)
library(ggplot2)
library(sf)
library(dplyr)
library(rio)
library(readr)
A biblioteca ``geobr`` é uma biblioteca útil quando o assunto é construção de mapas, no caso, do Brasil, uma vez que fornece malhas digitais de divisões territoriais variadas. Podemos investigar os datasets disponíveis por meio da seguinte função:
```{r}
datasets <- list_geobr()
Veja que há 27 datasets disponíveis, entre eles, os mais relevantes ao estudo atual são ``read_state()`` , ``read_municipality()`` e ``read_region()``, que contém dados da geometria espacial dos estados do Brasil. Veja o seguinte exemplo simples:
Vale ressaltar que quando nenhum parâmetro é passado na função ``read_state()``, ele retorna o dataset por completo a partir de um ano, veja:
head(states)
states <- read_state()
head(states)
```{r}
# Remove plot axis
no_axis <- theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
# Plot all Brazilian states
ggplot() +
geom_sf(data=states, fill="#2D3E50", color="#FEBF57", size=.15, show.legend = FALSE) +
labs(title="Estados do Brasil", size=12) +
theme_minimal() +
no_axis
# Plot all Brazilian states
ggplot() +
geom_sf(data=states, fill="#2D3E50", color="#FEBF57", size=.15, show.legend = FALSE) +
labs(title="Estados do Brasil", size=12) +
theme_minimal() +
no_axis
```{r}
# Download all municipalities of Rio
all_muni <- read_municipality(
code_muni = "RJ",
year= 2010,
showProgress = FALSE
)
# plot
ggplot() +
geom_sf(data=all_muni, fill="#2D3E50", color="#FEBF57", size=.15, show.legend = FALSE) +
labs(title="Municípios do Rio de Janeiro, 2000", size=12) +
theme_minimal() +
no_axis
# plot
ggplot() +
geom_sf(data=all_muni, fill="#2D3E50", color="#FEBF57", size=.15, show.legend = FALSE) +
labs(title="Municípios do Rio de Janeiro, 2000", size=12) +
theme_minimal() +
no_axis
## Construindo um mapa o IDHM dos municípios de Mato Grosso do Sul
Inicialmente, vamos fazer a leitura dos dados
```{r}
library(readxl)
atlas2013_dadosbrutos_pt <- read_excel("dados/Atlas_2013_municipal_estadual_Brasil.xlsx",
sheet = "MUN 91-00-10")
# reduzir linhas para 2010 e MS
# usando a funcao subset para pegar as colunas de IDH até a última ()
dados_ms <- subset(atlas2013_dadosbrutos_pt, UF == '50' & ANO == '2010',
select=c(Codmun7,IDHM,IDHM_E,IDHM_L,IDHM_R))
View(dados_ms)
library(readxl)
atlas2013_dadosbrutos_pt <- read_excel("dados/Atlas_2013_municipal_estadual_Brasil.xlsx",
sheet = "MUN 91-00-10")
# reduzir linhas para 2010 e MS
# usando a funcao subset para pegar as colunas de IDH até a última ()
dados_ms <- subset(atlas2013_dadosbrutos_pt, UF == '50' & ANO == '2010',
select=c(Codmun7,IDHM,IDHM_E,IDHM_L,IDHM_R))
```{r}
library(geobr)
# sugiro permanecer o timeout anterior, options(timeout= 4000000)
all_mun_ms <- read_municipality(code_muni=50, year=2010)
```{r}
```{r}
dataset_final = left_join(all_mun_ms, dados_ms, by=c("code_muni"="Codmun7"))
max(dataset_final$IDHM)
min(dataset_final$IDHM)
max(dataset_final$IDHM)
min(dataset_final$IDHM)
Agora, conseguiremos plotar o gráfico do IDH municipal do estado de MS. Ademais, como vimos anteriormente, que o IDHM máximo é 0.784 e o mínimo, 0.526, vamos estabelecer os limites de $(0.5, 0.8)$ na escala do mapa:
```{r}
ggplot() +
geom_sf(data=dataset_final, aes(fill=IDHM), color= NA, size=.15)+
labs(title="IDHM 2013 (ano base 2010) dos Municipíos de MS",
caption='Fonte: Elaboração própria', size=8)+
scale_fill_distiller(palette = "Greens", limits=c(0.5, 0.8),
name="Code_muni")+
theme_minimal()
## Um mapa do IDHM Educacional de São Paulo
Como já lemos a tabela bruta dos dados, podemos filtrar os resultados para o estado de São Paulo agora
Agora, vamos selecionar a esturuta de 2010 para compatibilizar o mapa de SP a partir da biblioteca ``geobr``
```{r}
all_mun_sp <- read_municipality(code_muni = 35, year = 2010)
# plot
ggplot() +
geom_sf(data=all_mun_sp, fill="#2D3E50", color="#FEBF57", size=.15, show.legend = FALSE) +
labs(title="Municípios de São Paulo, 2010", size=12) +
theme_minimal() +
no_axis
# plot
ggplot() +
geom_sf(data=all_mun_sp, fill="#2D3E50", color="#FEBF57", size=.15, show.legend = FALSE) +
labs(title="Municípios de São Paulo, 2010", size=12) +
theme_minimal() +
no_axis
# plot
ggplot() +
geom_sf(data=all_mun_sp, fill="#2D3E50", color="#FEBF57", size=.15, show.legend = FALSE) +
labs(title="Municípios de São Paulo, 2010", size=12) +
theme_minimal() +
no_axis
```
```{r}
dataset_final_sp = left_join(all_mun_sp, dados_sp, by = c("code_muni" = "Codmun7"))
dataset_final_sp = left_join(all_mun_sp, dados_sp, by = c("code_muni" = "Codmun7"))
Plotando o gráfico
```{r}
ggplot()+
geom_sf(data = dataset_final_sp, aes(fill = IDHM_E), color = NA, size = .15)+
labs(title = "IDHM Educação 2013 dos Municípios de SP",
caption = "Fonte: Elaboração própria", size = 8)+
scale_fill_distiller(palette = "YlOrRd", limits = c(0.0, 1.0),
name="IHDM_E")+
theme(plot.title = element_text(hjust = 0.5))
## Um mapa do IDHM Educacional de São Paulo
Como já lemos a tabela bruta dos dados, podemos filtrar os resultados para o estado de São Paulo agora
Agora, vamos selecionar a esturuta de 2010 para compatibilizar o mapa de SP a partir da biblioteca ``geobr``
dados_sp <- subset(atlas2013_dadosbrutos_pt, UF =='35' & ANO == '2010',
select = c(Codmun7, IDHM, IDHM_E, IDHM_L, IDHM_R))
print(dados_sp)
```{r}
all_mun_sp <- read_municipality(code_muni = 35, year = 2010)
# plot
ggplot() +
geom_sf(data=all_mun_sp, fill="#2D3E50", color="#FEBF57", size=.15, show.legend = FALSE) +
labs(title="Municípios de São Paulo, 2010", size=12) +
theme_minimal() +
no_axis
# plot
ggplot() +
geom_sf(data=all_mun_sp, fill="#2D3E50", color="#FEBF57", size=.15, show.legend = FALSE) +
labs(title="Municípios de São Paulo, 2010", size=12) +
theme_minimal() +
no_axis
```
dataset_final_sp = left_join(all_mun_sp, dados_sp, by = c("code_muni" = "Codmun7"))
dataset_final_sp = left_join(all_mun_sp, dados_sp, by = c("code_muni" = "Codmun7"))
Plotando o gráfico
```{r}
ggplot()+
geom_sf(data = dataset_final_sp, aes(fill = IDHM_E), color = NA, size = .15)+
labs(title = "IDHM Educação 2013 dos Municípios de SP",
caption = "Fonte: Elaboração própria", size = 8)+
scale_fill_distiller(palette = "YlOrRd", limits = c(0.0, 1.0),
name="IHDM_E")+
theme(plot.title = element_text(hjust = 0.5))
View(dados_covid_sp)
dados_covid_sp <- read.csv('dados/dados_covid_sp.csv', sep = ";")
dados_ordem <- dados[order(dados$nome_munic), ]
dados_ordem <- dados_covid_sp[order(dados$nome_munic), ]
dados_ordem <- dados_covid_sp[order(dados_covid_sp$nome_munic), ]
View(dados_ordem)
dados_ordem <- as.Date(dados_covid_sp$datahora)
data_inicio_2020 <- as.Date("2020-02-25")
data_final_2020 <-as.Date("2020-12-31")
dados_2020_filtrados <- subset(dados_ordem, datahora >= data_inicio_2020 & datahora <= data_final_2020)
dados_2020_filtrados <- subset(dados_covid_sp, datahora >= data_inicio_2020 & datahora <= data_final_2020)
View(dados_2020_filtrados)
View(dados_2020_filtrados)
soma_casos_2020 <- aggregate(cbind(casos_novos, codigo_igbe) ~ nome_munic, data = dados_2020_filtrados, FUN = sum)
soma_casos_2020 <- aggregate(cbind(casos_novos, codigo_ibge) ~ nome_munic, data = dados_2020_filtrados, FUN = sum)
View(soma_casos_2020)
soma_casos_2020 <- unique(dados_filtrados[, c("nome_munic", "codigo_ibge")])
soma_casos_2020 <- unique(dados_2020_filtrados[, c("nome_munic", "codigo_ibge")])
View(soma_casos_2020)
soma_casos_2020 <- dados %>%
filter(datahora >= data_inicio & datahora <= data_fim) %>%
group_by(nome_munic) %>%
summarise(total_casos_novos = sum(casos_novos))
soma_casos_2020 <- dados_covid_sp %>%
filter(datahora >= data_inicio & datahora <= data_fim) %>%
group_by(nome_munic) %>%
summarise(total_casos_novos = sum(casos_novos))
soma_casos_2020 <- dados_covid_sp %>%
filter(datahora >= data_inicio_2020 & datahora <= data_final_2020) %>%
group_by(nome_munic) %>%
summarise(total_casos_novos = sum(casos_novos))
View(soma_casos_2020)
View(soma_casos_2020)
View(soma_casos_2020)
soma_casos_2020 <- dados_covid_sp %>%
filter(datahora >= data_inicio_2020 & datahora <= data_final_2020) %>%
group_by(nome_munic, codigo_ibge) %>%
summarise(total_casos_novos = sum(casos_novos))
View(soma_casos_2020)
all_mun_sp <- read_municipality(code_muni = 35, year = 2010)
View(all_mun_sp)
View(soma_casos_2020)
dataset_final_2020 <- left_join(all_mun_sp, soma_casos_2020, by = c("code_muni" = "codigo_ibge"))
ggplot()+
geom_sf(data = dataset_final_2020, aes(fill = total_casos_novos), color = NA, size = .15)+
labs(title = "IDHM Educação 2013 dos Municípios de SP",
caption = "Fonte: Elaboração própria", size = 8)+
scale_fill_distiller(palette = "YlOrRd", limits = c(0.0, 1.0),
name="IHDM_E")+
theme(plot.title = element_text(hjust = 0.5))
min(dataset_final_2020)
min(dataset_final_2020$total_casos_novos)
max(dataset_final_2020$total_casos_novos)
ggplot()+
geom_sf(data = dataset_final_2020, aes(fill = total_casos_novos), color = NA, size = .15)+
labs(title = "IDHM Educação 2013 dos Municípios de SP",
caption = "Fonte: Elaboração própria", size = 8)+
scale_fill_distiller(palette = "YlOrRd", limits = c(1, 500000),
name="IHDM_E")+
theme(plot.title = element_text(hjust = 0.5))
ggplot()+
geom_sf(data = dataset_final_2020, aes(fill = total_casos_novos), color = NA, size = .15)+
labs(title = "IDHM Educação 2013 dos Municípios de SP",
caption = "Fonte: Elaboração própria", size = 8)+
scale_fill_distiller(palette = "Reds", limits = c(1, 500000),
name="IHDM_E")+
theme(plot.title = element_text(hjust = 0.5))
ggplot()+
geom_sf(data = dataset_final_2020, aes(fill = total_casos_novos), color = NA, size = .15)+
labs(title = "Casos de COVID-19 em 2020 dos Municípios de SP",
caption = "Fonte: Elaboração própria", size = 8)+
scale_fill_distiller(palette = "Reds", limits = c(1, 500000),
name="Total")+
theme(plot.title = element_text(hjust = 0.5))
ggplot()+
geom_sf(data = dataset_final_sp, aes(fill = IDHM_E), color = NA, size = .15)+
labs(title = "IDHM Educação 2013 dos Municípios de SP",
caption = "Fonte: Elaboração própria", size = 8)+
scale_fill_distiller(palette = "YlOrRd", limits = c(0.0, 1.0),
name="IHDM_E")+
theme(plot.title = element_text(hjust = 0.5),
axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
ggplot()+
geom_sf(data = dataset_final_sp, aes(fill = IDHM_E), color = NA, size = .15)+
labs(title = "IDHM Educação 2013 dos Municípios de SP",
caption = "Fonte: Elaboração própria", size = 8)+
scale_fill_distiller(palette = "YlOrRd", limits = c(0.0, 1.0),
name="IHDM_E")+
theme(plot.title = element_text(hjust = 0.5))
data_inicio_2021 <- as.Date("2021-01-01")
data_inicio_2022 <- as.Date("2022-01-01")
data_final_2021 <- as.Date("2021-12-31")
data_final_2022 <- as.Date("2022-12-31")
soma_casos_2021 <- dados_covid_sp %>%
filter(datahora >= data_inicio_2021 & datahora <= data_final_2021) %>%
group_by(nome_munic, codigo_ibge) %>%
summarise(total_casos_novos = sum(casos_novos))
soma_casos_2022 <- dados_covid_sp %>%
filter(datahora >= data_inicio_2022 & datahora <= data_final_2022) %>%
group_by(nome_munic, codigo_ibge) %>%
summarise(total_casos_novos = sum(casos_novos))
View(soma_casos_2021)
View(soma_casos_2022)
dataset_final_2021 <- left_join(all_mun_sp, soma_casos_2021, by = c("code_muni" = "codigo_ibge"))
min(dataset_final_2021$total_casos_novos)
max(dataset_final_2021$total_casos_novos)
dataset_final_2022 <- left_join(all_mun_sp, soma_casos_2022, by = c("code_muni" = "codigo_ibge"))
min(dataset_final_2022$total_casos_novos)
max(dataset_final_2022$total_casos_novos)
ggplot()+
geom_sf(data = dataset_final_2021, aes(fill = total_casos_novos), color = NA, size = .15)+
labs(title = "Casos de COVID-19 em 2021 dos Municípios de SP",
caption = "Fonte: Elaboração própria", size = 8)+
scale_fill_distiller(palette = "Reds", limits = c(1, 500000),
name="Total")+
theme(plot.title = element_text(hjust = 0.5))
ggplot()+
geom_sf(data = dataset_final_2022, aes(fill = total_casos_novos), color = NA, size = .15)+
labs(title = "Casos de COVID-19 em 2022 dos Municípios de SP",
caption = "Fonte: Elaboração própria", size = 8)+
scale_fill_distiller(palette = "Reds", limits = c(1, 500000),
name="Total")+
theme(plot.title = element_text(hjust = 0.5))
ggplot()+
geom_sf(data = dataset_final_2021, aes(fill = total_casos_novos), color = NA, size = .15)+
labs(title = "Casos de COVID-19 em 2021 dos Municípios de SP",
caption = "Fonte: Elaboração própria", size = 8)+
scale_fill_distiller(palette = "Reds", limits = c(0, 700000),
name="Total")+
theme(plot.title = element_text(hjust = 0.5))
ggplot()+
geom_sf(data = dataset_final_2022, aes(fill = total_casos_novos), color = NA, size = .15)+
labs(title = "Casos de COVID-19 em 2022 dos Municípios de SP",
caption = "Fonte: Elaboração própria", size = 8)+
scale_fill_distiller(palette = "Reds", limits = c(0, 700000),
name="Total")+
theme(plot.title = element_text(hjust = 0.5))
View(dataset_final_2021)
ggplot()+
geom_sf(data = dataset_final_2021, aes(fill = total_casos_novos), color = NA, size = .15)+
labs(title = "Casos de COVID-19 em 2021 dos Municípios de SP",
caption = "Fonte: Elaboração própria", size = 8)+
scale_fill_distiller(palette = "Reds", limits = c(0, 600000),
name="Total")+
theme(plot.title = element_text(hjust = 0.5))
ggplot()+
geom_sf(data = dataset_final_2022, aes(fill = total_casos_novos), color = NA, size = .15)+
labs(title = "Casos de COVID-19 em 2022 dos Municípios de SP",
caption = "Fonte: Elaboração própria", size = 8)+
scale_fill_distiller(palette = "Reds", limits = c(0, 200000),
name="Total")+
theme(plot.title = element_text(hjust = 0.5))
ggplot()+
geom_sf(data = dataset_final_2021, aes(fill = total_casos_novos), color = NA, size = .15)+
labs(title = "Casos de COVID-19 em 2021 dos Municípios de SP",
caption = "Fonte: Elaboração própria", size = 8)+
scale_fill_distiller(palette = "Set1", limits = c(0, 600000),
name="Total")+
theme(plot.title = element_text(hjust = 0.5))
ggplot()+
geom_sf(data = dataset_final_2022, aes(fill = total_casos_novos), color = NA, size = .15)+
labs(title = "Casos de COVID-19 em 2022 dos Municípios de SP",
caption = "Fonte: Elaboração própria", size = 8)+
scale_fill_distiller(palette = "Set1", limits = c(0, 200000),
name="Total")+
theme(plot.title = element_text(hjust = 0.5))
ggplot()+
geom_sf(data = dataset_final_2020, aes(fill = total_casos_novos), color = NA, size = .15)+
labs(title = "Casos de COVID-19 em 2020 dos Municípios de SP",
caption = "Fonte: Elaboração própria", size = 8)+
scale_fill_distiller(palette = "Set1", limits = c(1, 500000),
name="Total")+
theme(plot.title = element_text(hjust = 0.5))
ggplot()+
geom_sf(data = dataset_final_2022, aes(fill = total_casos_novos), color = NA, size = .15)+
labs(title = "Casos de COVID-19 em 2022 dos Municípios de SP",
caption = "Fonte: Elaboração própria", size = 8)+
scale_fill_distiller(palette = "Set1", limits = c(0, 200000),
name="Total")+
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_blank())
ggplot()+
geom_sf(data = dataset_final_2022, aes(fill = total_casos_novos), color = NA, size = .15)+
labs(title = "Casos de COVID-19 em 2022 dos Municípios de SP",
caption = "Fonte: Elaboração própria", size = 8)+
scale_fill_distiller(palette = "Set1", limits = c(0, 200000),
name="Total")+
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_blank(),
axis.ticks = element_blank())
ggplot()+
geom_sf(data = dataset_final_2020, aes(fill = total_casos_novos), color = NA, size = .15)+
labs(title = "Casos de COVID-19 em 2020 dos Municípios de SP",
caption = "Fonte: Elaboração própria", size = 8)+
scale_fill_distiller(palette = "Set1", limits = c(1, 500000),
name="Total")+
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_blank(),
axis.ticks = element_blank())
ggplot()+
geom_sf(data = dataset_final_2021, aes(fill = total_casos_novos), color = NA, size = .15)+
labs(title = "Casos de COVID-19 em 2021 dos Municípios de SP",
caption = "Fonte: Elaboração própria", size = 8)+
scale_fill_distiller(palette = "Set1", limits = c(0, 600000),
name="Total")+
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_blank(),
axis.ticks = element_blank())
ggplot()+
geom_sf(data = dataset_final_2022, aes(fill = total_casos_novos), color = NA, size = .15)+
labs(title = "Casos de COVID-19 em 2022 dos Municípios de SP",
caption = "Fonte: Elaboração própria", size = 8)+
scale_fill_distiller(palette = "Set1", limits = c(0, 200000),
name="Total")+
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_blank(),
axis.ticks = element_blank())
View(dados_covid_sp)
View(soma_casos_2021)
View(all_mun_sp)
View(dataset_final_2021)
ggplot()+
geom_sf(data = dataset_final_2022, aes(fill = total_casos_novos), color = NA, size = .15)+
labs(title = "Casos de COVID-19 em 2022 dos Municípios de SP",
caption = "Fonte: Elaboração própria", size = 8)+
scale_fill_distiller(palette = "Reds", limits = c(0, 200000),
name="Total")+
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_blank(),
axis.ticks = element_blank())
ggplot()+
geom_sf(data = dataset_final_2022, aes(fill = total_casos_novos), color = NA, size = .15)+
labs(title = "Casos de COVID-19 em 2022 dos Municípios de SP",
caption = "Fonte: Elaboração própria", size = 8)+
scale_fill_distiller(palette = "Accent", limits = c(0, 200000),
name="Total")+
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_blank(),
axis.ticks = element_blank())
ggplot()+
geom_sf(data = dataset_final_2022, aes(fill = total_casos_novos), color = NA, size = .15)+
labs(title = "Casos de COVID-19 em 2022 dos Municípios de SP",
caption = "Fonte: Elaboração própria", size = 8)+
scale_fill_distiller(palette = "Set3", limits = c(0, 200000),
name="Total")+
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_blank(),
axis.ticks = element_blank())
ggplot()+
geom_sf(data = dataset_final_2022, aes(fill = total_casos_novos), color = NA, size = .15)+
labs(title = "Casos de COVID-19 em 2022 dos Municípios de SP",
caption = "Fonte: Elaboração própria", size = 8)+
scale_fill_distiller(palette = "Set2", limits = c(0, 200000),
name="Total")+
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_blank(),
axis.ticks = element_blank())
ggplot()+
geom_sf(data = dataset_final_2022, aes(fill = total_casos_novos), color = NA, size = .15)+
labs(title = "Casos de COVID-19 em 2022 dos Municípios de SP",
caption = "Fonte: Elaboração própria", size = 8)+
scale_fill_distiller(palette = "Paired", limits = c(0, 200000),
name="Total")+
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_blank(),
axis.ticks = element_blank())
ggplot()+
geom_sf(data = dataset_final_2021, aes(fill = total_casos_novos), color = NA, size = .15)+
labs(title = "Casos de COVID-19 em 2021 dos Municípios de SP",
caption = "Fonte: Elaboração própria", size = 8)+
scale_fill_distiller(palette = "Paired", limits = c(0, 600000),
name="Total")+
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_blank(),
axis.ticks = element_blank())
ggplot()+
geom_sf(data = dataset_final_2020, aes(fill = total_casos_novos), color = NA, size = .15)+
labs(title = "Casos de COVID-19 em 2020 dos Municípios de SP",
caption = "Fonte: Elaboração própria", size = 8)+
scale_fill_distiller(palette = "Paired", limits = c(1, 500000),
name="Total")+
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_blank(),
axis.ticks = element_blank())
